#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
# Copyright 2014 Andreas Guldstrand <andreas.guldstrand@gmail.com>
#
# Licensed under the terms of the GNU GPL v3, or any later version.

use strict;
use warnings;
use utf8;
use Getopt::Long;

# default values
my $t_lv0 = $ENV{T_0} // 00;
my $t_lv1 = $ENV{T_1} // 20;
my $t_lv2 = $ENV{T_2} // 40;
my $t_lv3 = $ENV{T_3} // 60;
my $t_lv4 = $ENV{T_4} // 80;
my $t_lv5 = $ENV{T_5} // 100;



my $t_warn = $ENV{T_WARN} // 50;
my $t_crit = $ENV{T_CRIT} // 80;
my $cpu_usage = -1;
my $decimals = $ENV{DECIMALS} // 2;
my $label = $ENV{LABEL} // "";

sub help {
    print "Usage: cpu_usage [-w <warning>] [-c <critical>] [-d <decimals>]\n";
    print "-w <percent>: warning threshold to become yellow\n";
    print "-c <percent>: critical threshold to become red\n";
    print "-d <decimals>:  Use <decimals> decimals for percentage (default is $decimals) \n"; 
    exit 0;
}

GetOptions("help|h" => \&help,
           "w=i"    => \$t_warn,
           "c=i"    => \$t_crit,
           "d=i"    => \$decimals,
);

# Get CPU usage
$ENV{LC_ALL}="en_US"; # if mpstat is not run under en_US locale, things may break, so make sure it is
open (MPSTAT, 'mpstat 1 1 |') or die;
while (<MPSTAT>) {
    if (/^.*\s+(\d+\.\d+)[\s\x00]?$/) {
        $cpu_usage = 100 - $1; # 100% - %idle
        last;
    }
}
close(MPSTAT);

$cpu_usage eq -1 and die 'Can\'t find CPU information';

# Print short_text, full_text
print "${label}";
printf "%.${decimals}f%%\n", $cpu_usage;
print "${label}";
printf "%.${decimals}f%%\n", $cpu_usage;


# Print color, if needed
#if ($cpu_usage >= $t_lv0) {
#    print "#5B5B5B\n";
#} 
#elsif ($cpu_usage >= $t_lv1) {
#    print "#767676\n";
#}
#elsif ($cpu_usage >= $t_lv2) {
#    print "#989898\n";
#}
#elsif ($cpu_usage >= $t_lv3) {
#    print "#C2C2C2\n";
#}
#elsif ($cpu_usage >= $t_lv4) {
#    print "#C2C2C2\n";
#}

# Print color, if needed
if ($cpu_usage >= $t_crit) {
    print "#ffffff\n";
    exit 33;
} elsif ($cpu_usage >= $t_warn) {
    print "#ffffff\n";
}


exit 0;
